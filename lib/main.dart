import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';

import 'game.dart'; //‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ import StatelessWidget

void main() {
  runApp(const MyApp());
}

//class MyApp ‡πÄ‡∏õ‡πá‡∏ô ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á flutter
class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Guess the number',
      theme: ThemeData(
        primarySwatch: Colors.amber,
      ),
      home: HomePage(), //‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå home ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏™‡∏∏‡∏î
    );
  }
}

//stateful Widget = ‡∏´‡∏ô‡πâ‡∏≤ UI ‡∏ó‡∏µ‡πàreact ‡∏ï‡∏≤‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
//stateless Widget ‡∏´‡∏ô‡πâ‡∏≤ UI ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ react ‡∏ï‡∏≤‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô(‡∏´‡∏ô‡πâ‡∏≤ ui ‡∏ô‡∏¥‡πà‡∏á‡πÜ)
//Icon(Icons.persons) --> ‡πÄ‡∏≠‡∏≤‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏£‡∏π‡∏õ‡∏Ñ‡∏ô
class HomePage extends StatefulWidget {
  HomePage({Key? key}) : super(key: key);
  static const buttonSize = 30.0;
  @override
  State<HomePage> createState() => _HomePageState();
}


class _HomePageState extends State<HomePage> {
  /*final TextEditingController _controller =
  TextEditingController(); */
  String input ='';
  var txt = '‡∏ó‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç 1 ‡∏ñ‡∏∂‡∏á 100';
  var game = Game();

  var isCorrect = false;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      //‡πÉ‡∏ä‡πâ‡πÄ‡∏Ñ‡πâ‡∏≤‡πÇ‡∏Ñ‡∏£‡∏á‡πÅ‡∏≠‡∏û 1 ‡∏´‡∏ô‡πâ‡∏≤
      //appBar : ‡πÅ‡∏ñ‡∏ö‡∏ö‡∏≤‡∏£‡πå‡∏Ç‡πâ‡∏≤‡∏á‡∏ö‡∏ô
      appBar: AppBar(
        title: const Text(
          'GUESS THE NUMBER',
          style: TextStyle(
            color: Colors.white,
          ),
        ),
      ),
      body: Padding(
        padding: const EdgeInsets.all(25.0),
        child: Container(
          //‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏±‡∏ö <div> ‡πÉ‡∏ô html
          decoration: BoxDecoration(
              color: Colors.amberAccent.shade100,
              borderRadius: BorderRadius.circular(10.0),
              //border: Border.all(width: 5.0, color: Colors.blue),
              boxShadow: [
                BoxShadow(
                    color: Colors.black.withOpacity(0.5),
                    offset: const Offset(2.0, 5.0), //‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏á‡∏≤,
                    blurRadius: 5.0,
                    spreadRadius: 2.0)
              ]),
          //alignment: Alignment.topCenter,
          child: Center(
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              //‡∏à‡∏±‡∏î‡∏ß‡∏≤‡∏á‡πÉ‡∏ô‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô column
              //crossAxisAlignment: CrossAxisAlignment.center, //‡∏à‡∏±‡∏î‡∏ß‡∏≤‡∏á‡πÉ‡∏ô‡πÅ‡∏ô‡∏ß‡∏Ç‡∏ß‡∏≤‡∏á
              children: [
                Expanded(
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      Image.asset('assets/image/guess_logo.png', width: 100),
                      SizedBox(
                        width: 8,
                      ),
                      Column(
                        mainAxisSize: MainAxisSize.min,
                        children: [
                          Text(
                            'GUESS',
                            textAlign: TextAlign.center,
                            style: TextStyle(
                              fontSize: 40.0,
                              color: Colors.amber.shade800,
                            ),
                          ),
                          Text(
                            'THE NUMBER',
                            textAlign: TextAlign.center,
                            style: TextStyle(
                              fontSize: 20.0,
                              color: Colors.amber.shade600,
                            ),
                          ),
                        ],
                      ),
                    ],
                  ),
                ),


                /*SizedBox(
                  height: 20,
                ),*/

                Padding(
                  padding: const EdgeInsets.all(10.0),
                  child: Column(
                    children: [
                      Text(input,style: TextStyle(fontSize: 35),),
                      Text(txt,style: TextStyle(fontSize: 20),),
                    ],
                  )
                ),
                Container(
                  child: Column(
                    children: [
                      Row(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          _buildButton(1),
                          _buildButton(2),
                          _buildButton(3),
                        ],
                      ),
                      Row(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          _buildButton(4),
                          _buildButton(5),
                          _buildButton(6),
                        ],
                      ),
                      Row(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          _buildButton(7),
                          _buildButton(8),
                          _buildButton(9),
                        ],
                      ),
                      Row(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          Padding(
                            padding: const EdgeInsets.all(3.0),
                            child: OutlinedButton(onPressed: () {
                                setState(() {
                                  input ='';
                                });
                            },
                              child: Icon(Icons.clear_outlined,color: Colors.black),
                            ),
                          ),
                          _buildButton(0),
                          _buildButton(-1),
                        ],
                      ),
                    ],
                  ),
                ),
                Padding(
                  padding: const EdgeInsets.all(8.0),
                  child: ElevatedButton(
                    onPressed: () {

                      if(isCorrect){
                        game = Game();
                        isCorrect = false;
                      }
                      //‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°

                      var guess = int.tryParse(input);
                      if (guess != null) {
                        var result = game.doGuess(guess);
                        setState(() {
                          input ='';
                          if (result == 1) {
                            txt = '$guess : ‡∏°‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ';
                          }else if(result == -1) {
                            txt = '$guess : ‡∏ô‡πâ‡∏≠‡∏¢‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ';
                          }else if (result == 0) {
                            txt = '$guess : ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á üéâ ( ‡∏ó‡∏≤‡∏¢ ' +
                                (game.guessCount).toString()+' ‡∏Ñ‡∏£‡∏±‡πâ‡∏á )';
                            isCorrect = true;
                          }
                        });


                      }else{
                        showDialog(context: context,  barrierDismissible: false,builder: (BuildContext context){
                          return AlertDialog(
                            title: Text('ERROR'),
                            content:Text('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç'),
                            actions: [
                              TextButton(
                                onPressed: () {
                                  Navigator.of(context).pop();
                                },
                                child: Text('OK'),
                              ),
                            ],
                          );
                        });
                      }

                    },
                    child: Text(
                      'GUESS',
                      style: TextStyle(
                        fontSize: 20,
                        color: Colors.white,
                      ),
                    ),
                  ),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
  Widget _buildButton(int num) {
    return Padding(
      padding: const EdgeInsets.all(3.0),
      child: OutlinedButton(onPressed: () {
        if (num == -1) {
          //print('Backspace');
          setState(() {
            //'12345' ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏ï‡∏±‡∏î‡πÄ‡∏•‡∏Ç5‡∏ó‡∏¥‡πâ‡∏á
            var len = input.length;
            input = input.substring(
                0, len - 1); // 0 ‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏´‡∏ô ‡∏ñ‡∏∂‡∏á‡∏ï‡∏≥‡∏õ‡∏´‡∏ô‡πà‡∏á‡∏≠‡∏∞‡πÑ‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏™‡∏±‡∏ö
          });
        }else {
          //print('$num');
          setState(() {
            input = '$input$num';
          });
        }
      },
        child: (num == -1 )?Icon(Icons.backspace_outlined,color: Colors.black,):Text('$num',style: TextStyle(fontSize: 10,color: Colors.black),),
      ),
    );
  }
}



/*trick
‡∏Å‡∏î Ctrl+space bar ==> all method in that class
Alt+Enter ==> to wrap
‡∏ñ‡πâ‡∏≤... ?[ ....‡πÉ‡∏™‡πà‡∏û‡∏ß‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô....]

*/
//(num==-2)?Icon(Icons.clear_outlined,)
